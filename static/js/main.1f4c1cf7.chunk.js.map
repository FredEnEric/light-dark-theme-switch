{"version":3,"sources":["themes.ts","ThemeContext.tsx","App.tsx","index.tsx"],"names":["lightTheme","background","color","accent","darkTheme","theme","mode","ThemeContext","createContext","dark","toggle","ThemeProvider","_ref","children","_useDarkMode","_useState","useState","hasThemeLoaded","_useState2","Object","slicedToArray","themeState","setTheme","useEffect","isDark","localStorage","getItem","objectSpread","useDarkMode","_useDarkMode2","computedTheme","react_default","a","createElement","styled_components_browser_esm","Provider","value","setItem","JSON","stringify","Header","styled","h1","_templateObject","Button","button","_templateObject2","props","Sheet","div","_templateObject3","Container","_templateObject4","App","useContext","onClick","ReactDOM","render","src_ThemeContext","src_App","document","getElementById"],"mappings":"+NAWMA,EAA+B,CACnCC,WAHW,UAIXC,MANY,UAOZC,OARY,WAWRC,EAA8B,CAClCH,WAXY,UAYZC,MAbY,UAcZC,OAZe,WAiBFE,EAFD,SAACC,GAAD,MAA8C,SAATA,EAAkBF,EAAYJ,GCO3EO,EAAeC,wBALqB,CACxCC,MAAM,EACNC,OAAQ,eA2CKC,EAvB0B,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAAeC,EAdvC,WAAoB,IAAAC,EACPC,mBAAS,CACtCP,MAAM,EACNQ,gBAAgB,IAHoBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAC/BM,EAD+BH,EAAA,GACnBI,EADmBJ,EAAA,GAWtC,OALAK,oBAAU,WACR,IAAMC,EAA0C,SAAjCC,aAAaC,QAAQ,QACpCJ,EAASH,OAAAQ,EAAA,EAAAR,CAAA,GAAKE,EAAN,CAAkBZ,KAAMe,EAAQP,gBAAgB,MACvD,IAEI,CAACI,EAAYC,GAIWM,GAD0BC,EAAAV,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAClDO,EADkDQ,EAAA,GACtCP,EADsCO,EAAA,GAIzD,IAAKR,EAAWJ,eACd,OAAO,KAGT,IAMMa,EAAgBT,EAAWZ,KAAOJ,EAAM,QAAUA,EAAM,SAE9D,OACE0B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAqB7B,MAAOyB,GAC1BC,EAAAC,EAAAC,cAAC1B,EAAa4B,SAAd,CAAuBC,MAAO,CAAE3B,KAAMY,EAAWZ,KAAMC,OAV5C,WACb,IAAMD,GAAQY,EAAWZ,KACzBgB,aAAaY,QAAQ,OAAQC,KAAKC,UAAU9B,IAC5Ca,EAASH,OAAAQ,EAAA,EAAAR,CAAA,GAAKE,EAAN,CAAkBZ,aAO0CI,ytBC5DxE,IAAM2B,EAASC,IAAOC,GAAVC,KAKNC,EAASH,IAAOI,OAAVC,IACU,SAAAC,GAAK,OAAIA,EAAM1C,MAAMH,OAIhC,SAAA6C,GAAK,OAAIA,EAAM1C,MAAMH,QAK1B8C,EAAQP,IAAOQ,IAAVC,IAEK,SAAAH,GAAK,OAAIA,EAAM1C,MAAMF,SAM/BgD,EAAYV,IAAOQ,IAAVG,IACC,SAAAL,GAAK,OAAIA,EAAM1C,MAAMJ,YAC1B,SAAA8C,GAAK,OAAIA,EAAM1C,MAAMH,QAmBjBmD,EAfsB,WACnC,IAAMhC,EDJeiC,qBAAW/C,GCMhC,OACEwB,EAAAC,EAAAC,cAACkB,EAAD,KACEpB,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAACO,EAAD,KAASnB,EAAWZ,KAAO,OAAS,QAApC,iBACAsB,EAAAC,EAAAC,cAACW,EAAD,CAAQW,QAASlC,EAAWX,QAC1BqB,EAAAC,EAAAC,cAAA,yBAAiBZ,EAAWZ,KAAO,QAAU,OAA7C,cClCV+C,IAASC,OACP1B,EAAAC,EAAAC,cAACyB,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.1f4c1cf7.chunk.js","sourcesContent":["interface IThemeProperties {\r\n  background: string;\r\n  color: string;\r\n  accent: string;\r\n}\r\n\r\nconst white = '#ffffff';\r\nconst black = '#161617';\r\nconst darkGray = '#2a2a2a';\r\nconst gray = '#f8f8f9';\r\n\r\nconst lightTheme: IThemeProperties = {\r\n  background: gray,\r\n  color: black,\r\n  accent: white,\r\n};\r\n\r\nconst darkTheme: IThemeProperties = {\r\n  background: black,\r\n  color: white,\r\n  accent: darkGray,\r\n};\r\n\r\nconst theme = (mode: string): IThemeProperties => (mode === 'dark' ? darkTheme : lightTheme);\r\n\r\nexport default theme;\r\n","import React, {\r\n  createContext,\r\n  Dispatch,\r\n  FunctionComponent,\r\n  SetStateAction,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\r\n\r\nimport theme from './themes';\r\n\r\ninterface IThemeContext {\r\n  dark: boolean;\r\n  toggle: () => void;\r\n}\r\n\r\ninterface IThemeState {\r\n  dark: boolean;\r\n  hasThemeLoaded: boolean;\r\n}\r\n\r\ntype DarkModeHook = [IThemeState, Dispatch<SetStateAction<IThemeState>>];\r\n\r\nconst defaultContextData: IThemeContext = {\r\n  dark: false,\r\n  toggle: () => {},\r\n};\r\n\r\nconst ThemeContext = createContext(defaultContextData);\r\nconst useTheme = () => useContext(ThemeContext);\r\n\r\nconst useDarkMode = (): DarkModeHook => {\r\n  const [themeState, setTheme] = useState({\r\n    dark: false,\r\n    hasThemeLoaded: false,\r\n  } as IThemeState);\r\n\r\n  useEffect(() => {\r\n    const isDark = localStorage.getItem('dark') === 'true';\r\n    setTheme({ ...themeState, dark: isDark, hasThemeLoaded: true });\r\n  }, []);\r\n\r\n  return [themeState, setTheme];\r\n};\r\n\r\nconst ThemeProvider: FunctionComponent = ({ children }) => {\r\n  const [themeState, setTheme] = useDarkMode();\r\n\r\n  // * To prevent theme flashing, return nothing until loaded\r\n  if (!themeState.hasThemeLoaded) {\r\n    return null;\r\n  }\r\n\r\n  const toggle = () => {\r\n    const dark = !themeState.dark;\r\n    localStorage.setItem('dark', JSON.stringify(dark));\r\n    setTheme({ ...themeState, dark });\r\n  };\r\n\r\n  const computedTheme = themeState.dark ? theme('dark') : theme('light');\r\n\r\n  return (\r\n    <StyledThemeProvider theme={computedTheme}>\r\n      <ThemeContext.Provider value={{ dark: themeState.dark, toggle }}>{children}</ThemeContext.Provider>\r\n    </StyledThemeProvider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\nexport { useTheme };\r\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { useTheme } from './ThemeContext';\n\nconst Header = styled.h1`\n  font-size: 48px;\n  margin-bottom: 1em;\n`;\n\nconst Button = styled.button`\n  border: 2px solid ${props => props.theme.color};\n  border-radius: 5px;\n  padding: 0.75em;\n  background: none;\n  color: ${props => props.theme.color};\n  font-weight: 600;\n  font-size: 16px;\n`;\n\nconst Sheet = styled.div`\n  border-top-left-radius: 20px;\n  background: ${props => props.theme.accent};\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n  padding: 3rem;\n  height: calc(100vh - 10vh - 6rem);\n`;\n\nconst Container = styled.div`\n  background: ${props => props.theme.background};\n  color: ${props => props.theme.color};\n  padding: 10vh 0 0 20vw;\n`;\n\nconst App: React.FunctionComponent = () => {\n  const themeState = useTheme();\n\n  return (\n    <Container>\n      <Sheet>\n        <Header>{themeState.dark ? 'Dark' : 'Light'} mode example</Header>\n        <Button onClick={themeState.toggle}>\n          <span>Switch to {themeState.dark ? 'light' : 'dark'} theme</span>\n        </Button>\n      </Sheet>\n    </Container>\n  );\n};\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport ThemeProvider from './ThemeContext';\n\nReactDOM.render(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}